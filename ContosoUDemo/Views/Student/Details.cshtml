@model ContosoUDemo.Models.Student

@{
    ViewBag.Title = "Details";
}

<ol class="breadcrumb">
    <li>@Html.ActionLink("Home", "Index", "Home")</li>
    <li>@Html.ActionLink("Students", "Index", "Student")</li>
    <li class="active">@Html.DisplayFor(model => model.FirstMidName) @Html.DisplayFor(model => model.LastName)</li>
</ol>
<h2>Details</h2>

<div>
    <h4>Student</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FirstMidName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstMidName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>

        <dd>@* mwilliams:  remove mailto when using [DataType(DataType.EmailAddress)] in model
              @Html.DisplayFor(model => model.Email)*@
            @Html.DisplayTextFor(model=> model.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EnrollmentDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EnrollmentDate)
        </dd>
        @* mwilliams:  added student enrollment *@
        <dt>
            @Html.DisplayNameFor(model => model.Enrollments)
        </dt>
        <dd>
            <table class="table">
                <tr>
                    <th>Course Title</th>
                    <th>Grade</th>
                    <th>&nbsp;</th>
                </tr>
                @foreach (var item in Model.Enrollments)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Course.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Grade)
                        </td>
                        @* mwilliams added links *@
                        <td>
                            @if (String.IsNullOrEmpty(item.Grade.ToString()))
                            {
                                <a href="@Url.Action("Edit","Enrollment",new { id = item.EnrollmentID })" title="Edit Grade">Add Grade</a> <span class="glyphicon glyphicon-pencil"></span>
                            }
                            else
                            {
                                <a href="@Url.Action("Edit","Enrollment",new { id = item.EnrollmentID })" title="Edit Grade">Edit Grade</a> <span class="glyphicon glyphicon-edit"></span>
                            }

                        </td>
                    </tr>
                }
            </table>
        </dd>
        @* end mwilliams:  student enrollment *@
    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
